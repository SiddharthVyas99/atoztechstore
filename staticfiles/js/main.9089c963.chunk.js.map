{"version":3,"sources":["logo.svg","constants/userConstants.js","constants/orderConstants.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","Button","variant","className","Header","userInfo","useSelector","state","userLogin","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","console","log","split","Pagination","Array","keys","map","x","active","ProductCarousel","productTopRated","error","loading","products","useEffect","a","axios","get","data","payload","response","detail","message","Carousel","pause","Image","alt","Caption","HomeScreen","productList","search","listProducts","sm","md","lg","xl","ProductScreen","match","qty","setQty","productDetails","params","fluid","ListGroup","varinat","description","countInStock","xs","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","getState","setItem","JSON","stringify","cart","cartItems","CartScreen","productId","Number","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","Location","userRegister","register","required","ProfileScreen","userDetails","user","success","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","Authorization","token","put","updateUserProfile","Table","striped","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","reviews","shippingAdress","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9089c963.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const USER_LOGIN_REQUEST= 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS= 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL= 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT= 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST= 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS= 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL= 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST= 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS= 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL= 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET= 'USER_DETAILS_RESET'\r\n\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST= 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS= 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL= 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET= 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST= 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS= 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL= 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET= 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport {Button,Form} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword,setKeyword] = useState('')\r\n\r\n    let history=useHistory()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e)=>setKeyword(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>Submit</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Navbar,Container,Nav,NavDropdown} from 'react-bootstrap'\r\nimport {logout} from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler= () =>{\r\n        // console.log('Logout')\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>AZTechStore</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {/* {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )} */}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DETAILS_RESET\r\n} from '../constants/userConstants'\r\n\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\n\r\nexport const login = (email,password) => async(dispatch) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.post(\r\n            '/api/users/login/',\r\n            {'username':email,'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>  {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n\r\n}\r\n\r\nexport const register = (name,email,password) => async(dispatch) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.post(\r\n            '/api/users/register/',\r\n            {'name':name,'email':email,'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n        //localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Siddharth;\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value,text,color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={value>=1 ? 'fas fa-star':value>=0.5 ? 'fas fa-start-half-alt':'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value>=2 ? 'fas fa-star':value>=1.5 ? 'fas fa-start-half-alt':'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value>=3 ? 'fas fa-star':value>=2.5 ? 'fas fa-start-half-alt':'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value>=4 ? 'fas fa-star':value>=3.5 ? 'fas fa-start-half-alt':'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value>=5 ? 'fas fa-star':value>=4.5 ? 'fas fa-start-half-alt':'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Product({product}){\r\nreturn(\r\n    <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/product/${product._id}`}>\r\n            <Card.Img src={product.image}/>\r\n        </Link>\r\n\r\n        <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as=\"div\">\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n\r\n            </Link>\r\n\r\n            <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                    {/* {product.rating} from {product.numReviews} reviews */}\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                </div>\r\n            </Card.Text>\r\n\r\n            <Card.Text>\r\n                ${product.price}\r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n)\r\n}\r\n\r\nexport default Product","export const PRODUCT_LIST_REQUEST= 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS= 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL= 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST= 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS= 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL= 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_TOP_REQUEST= 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS= 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL= 'PRODUCT_TOP_FAIL'","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n        animation=\"border\"\r\n        role=\"status\"\r\n        style={{\r\n            height:'100px',\r\n            width:'100px',\r\n            margin:'auto',\r\n            display:'block'\r\n        }}\r\n        >\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nfunction Message({variant,children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport {Pagination} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages,page,keyword='',isAdmin=false}) {\r\n   \r\n\r\n    console.log('Keyword:',keyword)\r\n\r\n    if(keyword){\r\n        keyword=keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return ( pages>1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer \r\n                key={x+1}\r\n                to={`/?keyword=${keyword}&page=${x+1}`}\r\n                >\r\n                    <Pagination.Item active={x+1===page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n        \r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Carousel,Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport {listTopProducts} from '../actions/productActions'\r\n\r\n\r\nfunction ProductCarousel() {\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const {error,loading,products} = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n    \r\n    return (\r\n        loading ? <Loader/>\r\n        :error ? <Message variant='danger'>{error}</Message>\r\n        :(\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {products.map(product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name}/>\r\n                            <Carousel.Caption className='carousel.caption'>\r\n                                <h4>{product.name} (&#8377;{product.price})</h4>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n\r\n        \r\n        const {data} = await axios.get(`/api/products${keyword}`)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        \r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n\r\n        \r\n        const {data} = await axios.get(`/api/products/top/`)\r\n        \r\n        dispatch({\r\n            type:PRODUCT_TOP_SUCCESS,\r\n            payload:data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n\r\n}","import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Col,Row} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport {listProducts} from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nfunction HomeScreen({history}){\r\n    const dispatch = useDispatch()\r\n    const productList=useSelector(state => state.productList)\r\n    const {error,loading,products,page,pages}=productList\r\n\r\n    let keyword = history.location.search\r\n    // console.log(keyword)\r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword))\r\n       \r\n    },[dispatch,keyword])\r\n\r\nreturn(\r\n    <div>\r\n        {!keyword && <ProductCarousel/>\r\n        }\r\n        <h1>\r\n            Latest Products\r\n        </h1>\r\n        {loading ? <Loader/>\r\n            :error ? <Message variant=\"danger\">{error}</Message>\r\n                :\r\n                <div>\r\n                    <Row>\r\n                        {products.map(product=>(\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product}/> \r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                </div>\r\n\r\n        }\r\n        \r\n    </div>\r\n)\r\n}\r\n\r\nexport default HomeScreen","import React,{useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row,Col,Image, ListGroup,Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n// console.log(products)\r\n\r\nfunction ProductScreen({match,history}) {\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch=useDispatch()\r\n    const productDetails=useSelector(state => state.productDetails)\r\n    const {loading,error,product}= productDetails\r\n\r\n    useEffect(()=>{\r\n        dispatch(listProductDetails(match.params.id))\r\n        \r\n        \r\n    },[dispatch,match])\r\n\r\n    const addToCartHandler = () =>{\r\n       history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    // console.log(products)\r\n    // const product=products.find((p)=>p._id==match.params.id)\r\n    // console.log(product)\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ? <Loader/>\r\n                     :error ? <Message variant=\"danger\">{error}</Message>\r\n                      : \r\n                      <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid/>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup varinat=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews} ratings`} color={'#f8e825'}/>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    Price: &#8377;{product.price}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>&#8377;{product.price}</strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock>0?'In Stock':'Out of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock>0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col xs='auto' className=\"my-1\">\r\n                                                    <Form.Control\r\n                                                        as=\"select\"\r\n                                                        value={qty}\r\n                                                        onChange={(e)=> setQty(e.target.value)}\r\n                                                    >\r\n                                                    {\r\n                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                            <option key={x+1} value={x+1}>\r\n                                                                {x+1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button onClick={addToCartHandler} className=\"btn-block\" disabled={product.countInStock ==0} type=\"button\">Add to Cart</Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                      </Row>\r\n            \r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM= 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM= 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS= 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id,qty) => async(dispatch,getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            price:data.price,\r\n            image:data.image,\r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart= (id) => (dispatch,getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress= (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod= (data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}","import React,{useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Row,Col,ListGroup,Image,Form,Button,Card} from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart,removeFromCart} from '../actions/cartActions'\r\n\r\nfunction CartScreen({match,location,history}) {\r\n    \r\n    const productId=match.params.id\r\n    const qty=location.search ? Number(location.search.split('=')[1]):1\r\n    // console.log(qty)\r\n    \r\n    const dispatch=useDispatch()\r\n\r\n    const cart=useSelector(state => state.cart)\r\n    const {cartItems} =cart\r\n    console.log('cartItems:',cartItems)\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n    const removeFromCartHandler=(id)=>{\r\n        //console.log('remove:',id)\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length===0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                )\r\n                : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        &#8377;{item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e)=> dispatch(addToCart(item.product,Number(e.target.value)))}\r\n                                            >\r\n                                            {\r\n                                                [...Array(item.countInStock).keys()].map((x) => (\r\n                                                    <option key={x+1} value={x+1}>\r\n                                                        {x+1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button \r\n                                            type=\"button\"\r\n                                            variant='light'\r\n                                            onClick={()=>removeFromCartHandler(item.product)}    \r\n                                        >\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )\r\n                \r\n                }\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc,item)=> acc+item.qty,0)}) items</h2>\r\n                            {cartItems.reduce((acc,item)=> acc+item.qty * item.price,0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn btn-black'\r\n                            disabled={cartItems.length===0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed TO CHECKOUT\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport {Col,Row,Container} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {login} from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction LoginScreen({history,location}) {\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const redirect=location.search ? location.search.split('=')[1]:'/'\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const {error,loading,userInfo}= userLogin\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            console.log(redirect)\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n    const submitHandler= (e) =>{\r\n        e.preventDefault()\r\n        //console.log('Submitted')\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            {error && <Message variant=\"danger\" >{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <h1>Sign In</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' >Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}`:'/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {register} from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nfunction RegisterScreen({history,location}) {\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [message,setMessage] = useState('')\r\n\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const redirect=Location.search ? location.search.split('=')[1]:'/'\r\n\r\n    const userRegister= useSelector(state => state.userRegister)\r\n    const {error,loading,userInfo}= userRegister\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history,userInfo,redirect])\r\n\r\n    const submitHandler= (e) =>{\r\n\r\n        e.preventDefault()\r\n        //console.log('Submitted')\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        else{\r\n        dispatch(register(name,email,password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\" >{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <h1>Register</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' >Register</Button>\r\n\r\n\r\n            </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        Have an Account already? <Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>\r\n                            Login\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\nimport {listMyOrders} from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name,setName] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [message,setMessage] = useState('')\r\n\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const userDetails= useSelector(state => state.userDetails)\r\n    const {error,loading,user}= userDetails\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const {userInfo}= userLogin\r\n\r\n    const userUpdateProfile= useSelector(state => state.userUpdateProfile)\r\n    const {success}= userUpdateProfile\r\n\r\n    const orderListMy= useSelector(state => state.orderListMy)\r\n    const {loading:loadingOrders,error:errorOrders,orders}= orderListMy\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            if(!user || !user.name || success){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }\r\n            else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[dispatch,history,userInfo,user,success])\r\n\r\n    const submitHandler= (e) =>{\r\n\r\n        e.preventDefault()\r\n        //console.log('Submitted')\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }\r\n        else{\r\n        //console.log('updating profile')\r\n        dispatch(updateUserProfile({\r\n            'id':user._id,\r\n             'name':name,\r\n             'email':email,\r\n             'password':password\r\n    }))\r\n\r\n        setMessage('')\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n            {error && <Message variant=\"danger\" >{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <h1>Register</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e)=>setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e)=>setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' >Update</Button>\r\n\r\n\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>\r\n                    My Orders\r\n                </h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ): errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message> \r\n                ):(\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>&#8377;{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10): (\r\n                                            <i className='fas fa-times' style={{color:'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                       \r\n                    </Table>\r\n                )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants'\r\n\r\nimport {CART_CLEAR_ITEMS} from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//ASLVQery2h799PW52_dN6saRHDO6imGBhs6KMbto3qGc9QrwtRTY4ADpjqnchIQdFq1T6cY51XL-Bq5r\r\n\r\n\r\nexport const payOrder = (id,paymentResult) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = (id) => async(dispatch,getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin:{userInfo},\r\n        } = getState()\r\n\r\n        const config= {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} =await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1,step2,step3,step4}) {\r\n    return (\r\n        <Nav className=\"justify-content-center mb-4\">\r\n            <Nav.Item>\r\n                {step1 ?\r\n                    (\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>\r\n                    ):(\r\n                        <Nav.Link disabled>\r\n                            Login\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ?\r\n                    (\r\n                        <LinkContainer to='/shipping'>\r\n                            <Nav.Link>Shipping</Nav.Link>\r\n                        </LinkContainer>\r\n                    ):(\r\n                        <Nav.Link disabled>\r\n                            Shipping\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ?\r\n                    (\r\n                        <LinkContainer to='/payment'>\r\n                            <Nav.Link>Payment</Nav.Link>\r\n                        </LinkContainer>\r\n                    ):(\r\n                        <Nav.Link disabled>\r\n                            Payment\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ?\r\n                    (\r\n                        <LinkContainer to='/placeorder'>\r\n                            <Nav.Link>Place Order</Nav.Link>\r\n                        </LinkContainer>\r\n                    ):(\r\n                        <Nav.Link disabled>\r\n                            Place Order\r\n                        </Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\n\r\nexport default CheckoutSteps\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Form,Button} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart= useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const [address,setAddress] = useState(shippingAddress.address)\r\n    const [city,setCity] = useState(shippingAddress.city)\r\n    const [postalCode,setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country,setCountry] = useState(shippingAddress.country)\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //console.log('Submitted')\r\n        dispatch(saveShippingAddress({address,city,postalCode,country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e)=>setAddress(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e)=>setCity(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e)=>setPostalCode(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e)=>setCountry(e.target.value)}\r\n                        >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Form,Button,Row,Col} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart= useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch= useDispatch()\r\n    const [paymentMethod,setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Paypal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}>\r\n\r\n                            </Form.Check>\r\n                    </Col>\r\n                \r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Row,Col,ListGroup,Image,Card,Button, ListGroupItem} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {createOrder} from '../actions/orderActions'\r\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order,error,success}= orderCreate \r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price*item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 200 ? 0 : 50).toFixed(2)\r\n    cart.taxPrice = Number((0.13) * cart.itemsPrice).toFixed(2)\r\n    \r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n    \r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type:ORDER_CREATE_RESET})\r\n        }\r\n    },[success,history])\r\n    \r\n    const placeOrder = () => {\r\n        //console.log('Place Order')\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant=\"info\">Your cart is empty</Message>\r\n                            :(\r\n                                <ListGroup variant=\"flush\">\r\n                                    {\r\n                                        cart.cartItems.map((item,index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377; {item.price} = &#8377; {(item.price*item.qty).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))\r\n                                    }\r\n                                </ListGroup>\r\n                            )\r\n                            }\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                             <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items:</Col>\r\n                                <Col>&#8377;{cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping:</Col>\r\n                                <Col>&#8377;{cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax (GST):</Col>\r\n                                <Col>&#8377;{cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total:</Col>\r\n                                <Col>&#8377;{cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant=\"danger\">{error}</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrder}\r\n                            >\r\n                                Place Order\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n            </Row>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Row,Col,ListGroup,Image,Card,Button, ListGroupItem} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {ORDER_PAY_RESET} from '../constants/orderConstants'\r\n\r\nimport {createOrder, getOrderDetails,payOrder} from '../actions/orderActions'\r\n\r\n\r\nfunction OrderScreen({match}) {\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady,setSdkReady] = useState(false)\r\n\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order,error,loading}= orderDetails \r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay,success:successPay}= orderPay \r\n\r\n    \r\n    if(!loading && !error){\r\n    order.itemsPrice = order.orderItems.reduce((acc,item) => acc + item.price*item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script =document.createElement('script')\r\n        script.type='text/javascript'\r\n        script.src= 'https://www.paypal.com/sdk/js?client-id=ASLVQery2h799PW52_dN6saRHDO6imGBhs6KMbto3qGc9QrwtRTY4ADpjqnchIQdFq1T6cY51XL-Bq5r'\r\n        script.async=true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n        if(!order || successPay ||order._id !==Number(orderId)){\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    },[dispatch,order,orderId,successPay])\r\n    \r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId,paymentResult))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ): error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :\r\n    (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong> {order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country} \r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant=\"info\">Order is empty</Message>\r\n                            :(\r\n                                <ListGroup variant=\"flush\">\r\n                                    {\r\n                                        order.orderItems.map((item,index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X &#8377; {item.price} = &#8377; {(item.price*item.qty).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))\r\n                                    }\r\n                                </ListGroup>\r\n                            )\r\n                            }\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                             <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items:</Col>\r\n                                <Col>&#8377;{order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping:</Col>\r\n                                <Col>&#8377;{order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax (GST):</Col>\r\n                                <Col>&#8377;{order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total:</Col>\r\n                                <Col>&#8377;{order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        {\r\n                            !order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n                                    {!sdkReady ? (\r\n                                        <Loader/>\r\n                                        \r\n                                    ): (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )\r\n                                    }\r\n                                </ListGroup.Item>\r\n                            )\r\n                        }\r\n\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n            </Row>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Container } from 'react-bootstrap'\nimport {HashRouter as Router,Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact/>\n          <Route path='/product/:id' component={ProductScreen}/>\n          <Route path='/cart/:id?' component={CartScreen}/>\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {productListReducers,productDetailsReducers,productTopRatedReducers} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducers,userRegisterReducers,userDetailsReducers,userUpdateProfileReducers} from './reducers/userReducers'\r\nimport {orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer} from './reducers/orderReducers'\r\n\r\nconst reducer= combineReducers({\r\n    productList:productListReducers,\r\n    productDetails:productDetailsReducers,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducers,\r\n    userRegister:userRegisterReducers,\r\n    userDetails:userDetailsReducers,\r\n    userUpdateProfile:userUpdateProfileReducers,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    productTopRated:productTopRatedReducers\r\n})\r\n\r\nconst cartItemsFromStorage=localStorage.getItem('cartItems') ? \r\n        JSON.parse(localStorage.getItem('cartItems')): []\r\n\r\nconst userInfoFromStorage=localStorage.getItem('userInfo') ? \r\n        JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\nconst shippingAddressFromStorage=localStorage.getItem('shippingAddress') ? \r\n        JSON.parse(localStorage.getItem('shippingAddress')): {}\r\n\r\n\r\n\r\nconst initialState={\r\n    cart:{\r\n        cartItems:cartItemsFromStorage,\r\n        shippingAddress:shippingAddressFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store =createStore(reducer,initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))) \r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducers=(state = {products:[]},action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true,products:[]}\r\n    \r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading:false,products:action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages\r\n            }\r\n    \r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducers=(state = {product:{reviews:[]}},action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true,...state}\r\n    \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false,product:action.payload}\r\n    \r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducers=(state = {products:[]},action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true,products:[]}\r\n    \r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false,products:action.payload}\r\n    \r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false,error:action.payload}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import {CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const cartReducer= (state={cartItems:[],shippingAdress:{}},action)=>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item =action.payload\r\n            const existItem= state.cartItems.find(x=> x.product===item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product===existItem.product ? item: x)\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems,item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x=> x.product !==action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state.cartItems,\r\n                shippingAddress:action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod:action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems:[]\r\n            }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    \r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducers=(state = {},action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n    \r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n    \r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false,error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducers=(state = {},action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n    \r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n    \r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false,error:action.payload}\r\n\r\n        \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducers=(state = {user:{}},action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {... state, loading:true}\r\n    \r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false,user:action.payload}\r\n    \r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user: {}}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducers=(state = {},action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n    \r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false,success:true,userInfo:action.payload}\r\n    \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {loading:true}\r\n        \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {loading:false,success:true,order:action.payload}\r\n    \r\n        case ORDER_CREATE_FAIL:\r\n            return {loading:false,error:action.payload} \r\n            \r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading:true,orderItems:[],shippingAddress:{}}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true}\r\n        \r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {loading:false,success:true,order:action.payload}\r\n    \r\n        case ORDER_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload} \r\n\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading:true}\r\n        \r\n        case ORDER_PAY_SUCCESS:\r\n            return {loading:false,success:true}\r\n    \r\n        case ORDER_PAY_FAIL:\r\n            return {loading:false,error:action.payload} \r\n\r\n        case ORDER_PAY_RESET:\r\n            return {} \r\n\r\n        default:\r\n            return state\r\n        }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading:true}\r\n        \r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {loading:false,orders:action.payload}\r\n    \r\n        case ORDER_LIST_MY_FAIL:\r\n            return {loading:false,error:action.payload} \r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {orders:[]} \r\n\r\n        default:\r\n            return state\r\n        }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}